const sqlKeywords = [
  'SELECT', 'INSERT', 'UPDATE', 'DELETE', 'FROM', 'WHERE', 'JOIN', 
  'GROUP BY', 'ORDER BY', 'HAVING', 'CREATE', 'ALTER', 'DROP', 
  'TABLE', 'SQL', 'Types', 'DDL', 'DML', 'DCL', 'TCL', 'QUERY',
  'INDEX', 'VIEW', 'TRIGGER', 'PROCEDURE', 'FUNCTION', 
  'PRIMARY KEY', 'FOREIGN KEY', 'UNIQUE', 'CHECK', 'DEFAULT',
  'NOT NULL', 'CONSTRAINT', 'REFERENCES', 'AUTO_INCREMENT', 
  'TRANSACTION', 'COMMIT', 'ROLLBACK', 'SAVEPOINT', 'SET', 
  'EXISTS', 'CASE', 'WHEN', 'THEN', 'ELSE', 'END', 
  'LIMIT', 'OFFSET', 'UNION', 'INTERSECT', 'EXCEPT', 
  'DISTINCT', 'AS', 'IN', 'LIKE', 'BETWEEN', 'IS NULL', 
  'IS NOT NULL', 'ANY', 'ALL', 'SOME', 'CROSS JOIN', 
  'INNER JOIN', 'LEFT JOIN', 'RIGHT JOIN', 'FULL JOIN', 
  'NATURAL JOIN', 'OUTER JOIN', 'WITH', 'CTE', 'ROW_NUMBER', 
  'RANK', 'DENSE_RANK', 'PARTITION BY', 'UNPIVOT', 
  'PIVOT', 'MERGE', 'SET TRANSACTION', 'LOCK TABLE', 
  'RENAME', 'TRUNCATE', 'DROP INDEX', 'ALTER TABLE', 
  'ADD CONSTRAINT', 'REMOVE CONSTRAINT', 'ALTER COLUMN', 
  'SET DEFAULT', 'DROP COLUMN', 'ALTER VIEW', 'CREATE VIEW', 
  'REPLACE', 'GRANT', 'REVOKE', 'SHOW', 'DESCRIBE', 'EXPLAIN'
];

const sqlResponses = {
  "What is SQL?": "SQL (Structured Query Language) is a standard language for managing and manipulating databases.",
  "What is SQL?": "SQL (Structured Query Language) is a standard language for managing and manipulating databases.",
  "What does SELECT do?": "SELECT retrieves data from one or more tables in a database.",
  "What is INSERT?": "INSERT adds new rows to a table.",
  "What is UPDATE?": "UPDATE modifies existing records in a table.",
  "What is DELETE?": "DELETE removes records from a table.",
  "What does FROM do?": "FROM specifies the table from which to retrieve data.",
  "What is WHERE?": "WHERE filters records based on specified conditions.",
  "What is JOIN?": "JOIN combines rows from two or more tables based on a related column.",
  "What is GROUP BY?": "GROUP BY groups rows that have the same values in specified columns.",
  "What is ORDER BY?": "ORDER BY sorts the result set by one or more columns.",
  "What is HAVING?": "HAVING filters groups based on a specified condition.",
  "What is DDL?": "DDL (Data Definition Language) includes commands like CREATE, ALTER, and DROP.",
  "What is DML?": "DML (Data Manipulation Language) includes commands like SELECT, INSERT, UPDATE, and DELETE.",
  "What is DCL?": "DCL (Data Control Language) includes commands like GRANT and REVOKE.",
  "What is TCL?": "TCL (Transaction Control Language) includes commands like COMMIT and ROLLBACK.",
  "What is an Aggregate Function?": "Aggregate functions perform calculations on a set of values and return a single value (e.g., COUNT, SUM, AVG).",
  "What is a Subquery?": "A subquery is a query nested within another query, used to return data for the main query.",
  "What is an Index?": "An index is a database structure that improves the speed of data retrieval operations.",
  "What is a View?": "A view is a virtual table based on the result set of a SELECT query.",
  "What is a Stored Procedure?": "A stored procedure is a precompiled collection of SQL statements that can be executed as a single unit."
};

function isSQLQuestion(question) {
  return sqlKeywords.some(keyword => question.toUpperCase().includes(keyword));
}

function appendSQLKeyword(question) {
  for (let keyword of sqlKeywords) {
    if (question.toUpperCase().includes(keyword)) {
      return question; 
    }
  }
  return question + ' ' + sqlKeywords[0]; 
}

async function generateAnswer() {
  const questionInput = document.getElementById("questionInput");
  const answerOutput = document.getElementById("answerOutput");
  const generateAnswerBtn = document.getElementById("generateAnswerBtn");
  let normalizedQuestion = questionInput.value.trim();
  
  if (!isSQLQuestion(normalizedQuestion)) {
      if (normalizedQuestion === "") {
          answerOutput.textContent = "You did not write anything.";
          return;
      }
      answerOutput.textContent = "Sorry, I can only answer SQL-related questions.";
      return;
  }
  normalizedQuestion = appendSQLKeyword(normalizedQuestion);

  generateAnswerBtn.textContent = "Generating...";
  generateAnswerBtn.disabled = true;
  answerOutput.innerHTML = '<img src="img/sparkles.png" alt="Loading..." class="loading-img">';

  try {
      const disclaimer = "**Note:** This answer is generated by AI. While efforts are made to provide accurate and reliable information, it is always a good idea to cross-check.\n\n";

      if (sqlResponses[normalizedQuestion]) {
          const response = sqlResponses[normalizedQuestion];
          answerOutput.textContent = disclaimer + response;
      } else {
          const response = await axios.post(
              "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=AIzaSyCAcoQoxktH2BOIh-ug3UA_0q8UUtSMdPA",
              { contents: [{ parts: [{ text: normalizedQuestion }] }] }
          );
          const aiGeneratedText = response.data.candidates[0].content.parts[0].text;
          answerOutput.textContent = disclaimer + aiGeneratedText;
      }
  } catch (error) {
      answerOutput.textContent = "There was an error generating the answer. Please try again later.";
  } finally {
    generateAnswerBtn.textContent = "Generate Answer";
    generateAnswerBtn.disabled = false;
  }
}

function resetFields() {
  document.getElementById("questionInput").value = ""; 
  document.getElementById("answerOutput").textContent = ""; 
}

document.getElementById("toggleChatbot").addEventListener("click", function() {
  const chatbotWindow = document.getElementById("chatbotWindow");
  chatbotWindow.classList.toggle("show");
});

document.getElementById("closeChatbot").addEventListener("click", function() {
  const chatbotWindow = document.getElementById("chatbotWindow");
  chatbotWindow.classList.remove("show");
});

document.getElementById("generateAnswerBtn").addEventListener("click", generateAnswer);
document.getElementById("resetBtn").addEventListener("click", resetFields);
